generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Profile {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  userId   String  @unique
  name     String
  imageUrl String? 

  email        String  
  phoneNumber  String
  instaProfile String?

  donations Donation[]
  adoptions Adoption[]
  order     Order[]
  cart Cart[]
  

  createdAt DateTime @default(now())
}

enum PetType {
  DOG
  CAT
  BIRD
}


model Pet {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  name String

  type  PetType
  breed String 

  age         String
  imageUrl    String 
  description String 
  location String

  available Boolean @default(true)

  donations Donation[]
  adoptions Adoption[]

  createdAt DateTime @default(now())
}

model Donation {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  petId String @db.ObjectId
  pet   Pet    @relation(fields: [petId], references: [id], onDelete: Cascade)

  profileId String @db.ObjectId
  profile   Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())

  @@index([profileId])
  @@index([petId])
}

model Adoption {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  petId String @db.ObjectId
  pet   Pet    @relation(fields: [petId], references: [id], onDelete: Cascade)

  profileId String @db.ObjectId
  profile   Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())

  @@index([profileId])
  @@index([petId])
}

model Product {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  title       String
  description String  
  imageUrl    String 
  price       String

  order Order[]
  cart Cart[]

  createdAt DateTime @default(now())
}

model Order {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  productId String @db.ObjectId
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  profileId String @db.ObjectId
  profile   Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())

  @@index([profileId])
  @@index([productId])
}

model Cart{
  id String @id @default(auto()) @map("_id") @db.ObjectId

  productId String @db.ObjectId
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  profileId String @db.ObjectId
  profile   Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)

  qty Int @default(0) 
  price String

  createdAt DateTime @default(now())

  @@index([profileId])
  @@index([productId])
}